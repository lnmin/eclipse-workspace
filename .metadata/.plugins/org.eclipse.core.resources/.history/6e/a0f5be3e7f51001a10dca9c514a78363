package com.heima.thread2;

import java.util.concurrent.Callable;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;

public class Demo6_Callable {

	/**
	 * @param args
	 */
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		ExecutorService pool = Executors.newFixedThreadPool(2); //创建线程池
		pool.submit(new MyCallable(100));               //将线程放进池子里并执行
		pool.submit(new MyCallable(50));               //将线程放进池子里并执行
	
		pool.shutdown();      
	}

}

class MyCallable implements Callable<Integer>{
	private int num;
	public MyCallable(int num) {
		this.num = num;
	}
	@Override
	public Integer call() throws Exception {
		int sum = 0;
		for(int i = 1; i <= num; i++) {
			sum += i;
			
		}
		return sum;
	}
	
}